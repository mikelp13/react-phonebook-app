{"version":3,"sources":["redux/actions/phonebookActions.js","redux/reducers/authReducer.js","redux/reducers/phonebookReducer.js","redux/reducers/rootReducer.js","redux/store.js","redux/selectors/authSelectors.js","routes/phonebookRoutes.js","components/header/navigation/NavigationLink.js","components/header/navigation/NavigationListItem.js","components/header/navigation/NavigationStyled.js","components/header/navigation/Navigation.js","components/themeSwitch/ThemeSwitchStyled.js","components/themeSwitch/ThemeSwitch.js","components/userMenu/UserMenuStyled.js","components/userMenu/UserMenu.js","components/burger/BurgerStyled.js","components/burger/Burger.js","images/phonebook-icon.png","components/logo/LogoStyled.js","components/logo/Logo.js","components/header/HeaderStyled.js","components/header/Header.js","components/PrivateRoute.js","components/PublicRoute.js","components/main/Main.js","hooks/persistedTheme.js","themes/light.js","themes/dark.js","themes/GlobalStyle.js","components/App.js","index.js","redux/operations/authOperations.js","components/loader/Loader.js","redux/actions/authActions.js"],"names":["addContactRequest","createAction","addContactSuccess","addContactError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","setFilter","innitialUserState","user","email","createReducer","registerSuccess","_","payload","loginSuccess","getCurrentUserSuccess","logoutSuccess","token","error","registerError","loginError","getCurrentUserError","logoutError","authReducer","combineReducers","items","state","action","filter","item","id","loading","phonebookReducer","authPersistConfig","key","storage","whitelist","rootReducer","contacts","auth","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","isLogin","getUserName","name","phonebookRoutes","path","exact","component","lazy","isPrivate","restricted","NavigationLink","onClick","className","to","activeClassName","NavigationListItem","isAuth","routeProps","NavList","styled","ul","theme","colors","background","primary","Navigation","isAuthenticated","useSelector","map","route","Label","label","props","ThemeSwitch","toggleTheme","useContext","ThemeContext","type","checked","title","onChange","MenuContainer","div","LogoutBtn","button","secondary","accent","UserMenu","dispatch","useDispatch","src","alt","width","logOut","StyledBurger","isOpen","RightNav","burgerBackground","Burger","useState","setIsOpen","onHandleClick","StyledLink","Link","Logo","image","HeaderStyled","header","Header","PrivateRoute","Component","render","PublicRoute","Main","fallback","Loader","usePersitedTheme","initialState","storageValue","localStorage","getItem","JSON","parse","setState","useEffect","setItem","stringify","light","main","mainBackground","text","dark","GlobalStyle","createGlobalStyle","App","getCurrentUser","setTheme","ReactDOM","document","getElementById","axios","defaults","baseURL","process","headers","common","Authorization","register","credentials","registerRequest","post","then","data","catch","logIn","logoutRequest","getState","persistedToken","getCurrentUserRequest","get","override","css","color","size"],"mappings":"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","file":"static/js/main.c09c21c1.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addContactRequest = createAction(\"phonebook/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"phonebook/addContactSuccess\");\r\nexport const addContactError = createAction(\"phonebook/addContactError\");\r\n\r\nexport const fetchContactsRequest = createAction(\"phonebook/fetchRequest\");\r\nexport const fetchContactsSuccess = createAction(\"phonebook/fetchSuccess\");\r\nexport const fetchContactsError = createAction(\"phonebook/fetchError\");\r\n\r\nexport const removeContactRequest = createAction(\"phonebook/removeRequest\");\r\nexport const removeContactSuccess = createAction(\"phonebook/removeSuccess\");\r\nexport const removeContactError = createAction(\"phonebook/removeError\");\r\n\r\nexport const setFilter = createAction(\"phonebook/setFilter\");\r\n","import { combineReducers, createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  getCurrentUserError,\r\n  getCurrentUserSuccess,\r\n  loginError,\r\n  loginSuccess,\r\n  logoutError,\r\n  logoutSuccess,\r\n  registerError,\r\n  registerSuccess,\r\n} from \"../actions/authActions\";\r\n\r\nconst innitialUserState = { user: null, email: null };\r\n\r\nconst user = createReducer(innitialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [logoutSuccess]: () => innitialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [getCurrentUserError]: (_, { payload }) => payload,\r\n  [logoutError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst authReducer = combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n\r\nexport default authReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  removeContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  setFilter,\r\n} from \"../actions/phonebookActions\";\r\n\r\n\r\nconst items = createReducer([], {\r\n  [addContactSuccess]: (state, action) => [...state, action.payload],\r\n  [fetchContactsSuccess]: (_, action) => [...action.payload],\r\n  [removeContactSuccess]: (state, action) =>\r\n    state.filter((item) => item.id !== action.payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [setFilter]: (_, action) => action.payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [removeContactRequest]: () => true,\r\n  [removeContactSuccess]: () => false,\r\n  [removeContactError]: () => false,\r\n});\r\n\r\n\r\nconst error = createReducer(null, {\r\n  [addContactError]: (_, action) => action.payload,\r\n  [addContactSuccess]: () => null,\r\n\r\n  [fetchContactsError]: (_, action) => action.payload,\r\n  [fetchContactsSuccess]: () => null,\r\n\r\n  [removeContactError]: (_, action) => action.payload,\r\n  [removeContactSuccess]: () => null,\r\n})\r\n\r\nconst phonebookReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n\r\nexport default phonebookReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport authReducer from \"./authReducer\";\r\nimport phonebookReducer from \"./phonebookReducer\";\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist:['token']\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: phonebookReducer,\r\n  auth: persistReducer(authPersistConfig, authReducer),\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport {\r\n  PURGE,\r\n  REGISTER,\r\n  PERSIST,\r\n  PAUSE,\r\n  REHYDRATE,\r\n  FLUSH,\r\n} from \"redux-persist/es/constants\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  //  fixed persist error (\"A non-serializable value...\")\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n","const isLogin = (state) => state.auth.token;\r\nconst getUserName = (state) => state.auth.user.name;\r\n\r\nexport { isLogin, getUserName };\r\n","import { lazy } from \"react\";\r\n\r\nconst phonebookRoutes = [\r\n  {\r\n    path: \"/\",\r\n    name: \"Home\",\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import(\"../pages/homePage/HomePage\" /* webpackChunkName: \"HomePage\"*/)\r\n    ),\r\n    isPrivate: false,\r\n    restricted: false,\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    name: \"Login\",\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import(\"../pages/loginPage/LoginPage\" /* webpackChunkName: \"LoginPage\"*/)\r\n    ),\r\n    isPrivate: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: \"/register\",\r\n    name:  \"Sign Up\",\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import(\"../pages/registerPage/RegisterPage\" /* webpackChunkName: \"RegisterPage\"*/)\r\n    ),\r\n    isPrivate: false,\r\n    restricted: true,\r\n  },\r\n  {\r\n    path: \"/contacts\",\r\n    name:  \"Contacts\",\r\n    exact: true,\r\n    component: lazy(() =>\r\n      import(\"../pages/contactsPage/ContactsPage\" /* webpackChunkName: \"ContactsPage\"*/)\r\n    ),\r\n    isPrivate: true,\r\n    restricted: false,\r\n  },\r\n];\r\n\r\nexport default phonebookRoutes;","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NavigationLink = ({ path, exact, name, onClick }) => (\r\n  <li className=\"navagationListItem\">\r\n    <NavLink\r\n      to={path}\r\n      exact={exact}\r\n      className=\"navagationLink\"\r\n      activeClassName=\"activeLink\"\r\n      onClick={onClick}\r\n    >\r\n      {name}\r\n    </NavLink>\r\n  </li>\r\n);\r\n\r\nexport default NavigationLink;\r\n","import React from \"react\";\r\nimport NavigationLink from \"./NavigationLink\";\r\n\r\nconst NavigationListItem = ({\r\n  isAuth,\r\n  isPrivate,\r\n  restricted,\r\n  onClick,\r\n  ...routeProps\r\n}) => (\r\n  <>\r\n    {!isPrivate && !restricted && <NavigationLink {...routeProps} onClick={onClick} />}\r\n\r\n    {isAuth && isPrivate && !restricted && <NavigationLink {...routeProps} onClick={onClick} />}\r\n\r\n    {!isAuth && !isPrivate && restricted && <NavigationLink {...routeProps} onClick={onClick} />}\r\n  </>\r\n);\r\n\r\nexport default NavigationListItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NavList = styled.ul`\r\n  @media (max-width: 767px) {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-flow: column nowrap;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    padding: 130px 0;\r\n  }\r\n  @media (min-width: 768px) {\r\n    display: flex;\r\n    margin-left: 30px;\r\n    margin-right: auto;\r\n  }\r\n\r\n  .navagationListItem:not(:last-child) {\r\n\r\n    @media (max-width: 767px) {\r\n      margin-bottom: 60px;\r\n    }\r\n    @media (min-width: 768px) {\r\n      margin-right: 20px;\r\n    }\r\n\r\n \r\n  }\r\n\r\n  .navagationLink {\r\n    padding: 10px;\r\n    text-decoration: none;\r\n    text-transform: uppercase;\r\n    font-size: 20px;\r\n    font-weight: 700;\r\n    color: ${({ theme }) => theme.colors.background};\r\n\r\n    @media (min-width: 768px) {\r\n      padding: 13px;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  .activeLink {\r\n    color: ${({ theme }) => theme.colors.primary};\r\n    border-radius: 2px;\r\n    border-bottom: 2px solid ${({ theme }) => theme.colors.primary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isLogin } from \"../../../redux/selectors/authSelectors\";\r\nimport phonebookRoutes from \"../../../routes/phonebookRoutes\";\r\nimport NavigationListItem from \"./NavigationListItem\";\r\nimport { NavList } from \"./NavigationStyled\";\r\n\r\nconst Navigation = ({onClick}) => {\r\n\r\n  const isAuthenticated = useSelector(isLogin);\r\n\r\n\r\n  \r\n  return (\r\n    <NavList>\r\n      {phonebookRoutes.map((route)=>(\r\n        <NavigationListItem {...route} isAuth={isAuthenticated} key={route.path} onClick={onClick} />\r\n      ))}\r\n    </NavList>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Label = styled.label`\r\n\r\n@media (max-width: 767px) {\r\n    position: absolute;\r\n    top: 30px;\r\n    left: 30px;\r\n  }\r\n\r\n  position: relative;\r\n  display: inline-block;\r\n  min-width: 50px;\r\n  height: 24px;\r\n\r\n  input {\r\n    opacity: 1;\r\n    width: 0;\r\n    height: 0;\r\n  }\r\n\r\n  .slider {\r\n    position: absolute;\r\n    cursor: pointer;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color: #ccc;\r\n    transition: 400ms;\r\n    border-radius: 34px;\r\n  }\r\n\r\n  .slider:before {\r\n    position: absolute;\r\n    content: \"\";\r\n    height: 16px;\r\n    width: 16px;\r\n    left: 4px;\r\n    bottom: 4px;\r\n    background-color: white;\r\n    transition: 400ms;\r\n    border-radius: 50%;\r\n  }\r\n\r\n  input:checked + .slider {\r\n    background-color: ${(props) => props.theme.colors.primary};\r\n  }\r\n\r\n  input:focus + .slider {\r\n    box-shadow: 0 0 1px ${(props) => props.theme.colors.primary};\r\n  }\r\n\r\n  input:checked + .slider:before {\r\n    transform: translateX(26px);\r\n  }\r\n`;\r\n","import React, {useContext} from \"react\";\r\nimport { ThemeContext } from \"styled-components\";\r\nimport { Label } from \"./ThemeSwitchStyled\";\r\n\r\nconst ThemeSwitch = ({ toggleTheme}) => {\r\n  const theme = useContext(ThemeContext)\r\n  return (\r\n    <Label className=\"switch\">\r\n      <input type=\"checkbox\" checked={theme.title === \"dark\"} onChange={toggleTheme} />\r\n      <span className=\"slider\"></span>\r\n    </Label>\r\n  );\r\n};\r\n\r\nexport default ThemeSwitch;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MenuContainer = styled.div`\r\n  @media (max-width: 767px) {\r\n    position: absolute;\r\n\r\n    img {\r\n      margin: 0 auto;\r\n      width: 50px;\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-right: 30px;\r\n\r\n    img {\r\n      margin-right: 5px;\r\n    }\r\n  }\r\n\r\n  span {\r\n    font-weight: 700;\r\n    margin-right: 12px;\r\n  }\r\n`;\r\n\r\nexport const LogoutBtn = styled.button`\r\n  color: #fff;\r\n  font-size: 14px;\r\n  border: none;\r\n  border-radius: 3px;\r\n  padding: 3px;\r\n  display: inline-block;\r\n  background-color: ${({ theme }) => theme.colors.secondary};\r\n\r\n    &:hover {\r\n    background-color: ${({ theme }) => theme.colors.accent};\r\n    color: #fff;\r\n    transition: all 250ms linear;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { logOut } from \"../../redux/operations/authOperations\";\r\nimport { getUserName } from \"../../redux/selectors/authSelectors\";\r\nimport {LogoutBtn, MenuContainer} from './UserMenuStyled'\r\n\r\n\r\nconst UserMenu = () => {\r\n  const name = useSelector(getUserName);\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogout = () => dispatch(logOut())\r\n\r\n  return (\r\n    <MenuContainer>\r\n      <img src= \"https://cdn4.iconfinder.com/data/icons/avatars-xmas-giveaway/128/batman_hero_avatar_comics-512.png\" alt=\"avatar-icon\" width=\"32\" />\r\n      <span>Welcome, {name}</span>\r\n      <LogoutBtn type=\"button\" onClick={onLogout}>\r\n        Logout &#10149;\r\n      </LogoutBtn>\r\n    </MenuContainer>\r\n  );\r\n};\r\n\r\nexport default UserMenu;\r\n\r\n\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledBurger = styled.div`\r\n  z-index: 10;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  display: none;\r\n\r\n  @media (max-width: 767px) {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    flex-flow: column nowrap;\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.25rem;\r\n    background-color: ${({ isOpen }) => (isOpen ? \"#134780\" : \"#134780\")};\r\n    border-radius: 10px;\r\n    transform-origin: 1px 2px;\r\n    transition: all 200ms linear;\r\n\r\n    &:nth-child(1) {\r\n      transform: ${({ isOpen }) => (isOpen ? \"rotate(45deg)\" : \"rotate(0)\")};\r\n    }\r\n    &:nth-child(2) {\r\n      transform: ${({ isOpen }) =>\r\n        isOpen ? \"translateX(100%)\" : \"translateX(0)\"};\r\n      opacity: ${({ isOpen }) => (isOpen ? 0 : 1)};\r\n    }\r\n    &:nth-child(3) {\r\n      transform: ${({ isOpen }) => (isOpen ? \"rotate(-45deg)\" : \"rotate(0)\")};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const RightNav = styled.div`\r\n  display: flex;\r\n\r\n  @media (max-width: 767px) {\r\n    justify-content: center;\r\n    background-color: ${({ theme }) => theme.colors.burgerBackground};;\r\n    position: fixed;\r\n    transform: ${({ isOpen }) =>\r\n      isOpen ? \"translateX(0)\" : \"translateX(100%)\"};\r\n    top: 60px;\r\n    right: 0;\r\n    height: 100vh;\r\n    width: 100%;\r\n    /* padding-top: 3.5rem; */\r\n    transition: transform 250ms ease-in-out;\r\n    padding: 20px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n   width:100%;\r\n   height:25px;\r\n  }\r\n`;\r\n","import React, { useState } from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { isLogin } from '../../redux/selectors/authSelectors';\r\nimport Navigation from '../header/navigation/Navigation';\r\nimport ThemeSwitch from '../themeSwitch/ThemeSwitch';\r\nimport UserMenu from '../userMenu/UserMenu';\r\nimport { StyledBurger, RightNav } from './BurgerStyled';\r\n\r\n\r\nconst Burger = ({ toggleTheme }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const isAuthenticated = useSelector(isLogin)\r\n\r\n  const onHandleClick = () =>\r\n  setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <>\r\n      <StyledBurger isOpen={isOpen} onClick={onHandleClick}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </StyledBurger>\r\n      <RightNav isOpen={isOpen} >\r\n      <Navigation onClick={onHandleClick}/>\r\n      {isAuthenticated && <UserMenu />}\r\n      <ThemeSwitch toggleTheme={toggleTheme} />\r\n      </RightNav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Burger;\r\n","export default __webpack_public_path__ + \"static/media/phonebook-icon.e42f3cfd.png\";","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const StyledLink = styled(Link)`\r\n  padding: 5px 0;\r\n  img {\r\n    height: 50px;\r\n    min-width: 50px;\r\n  }\r\n  &:hover, &:focus {\r\n    transform: scale(1.03);\r\n    transition: transform 250ms linear\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport image from \"../../images/phonebook-icon.png\";\r\nimport { StyledLink } from \"./LogoStyled\";\r\n\r\nconst Logo = () => (\r\n    <StyledLink to=\"/\">\r\n      <img src={image} alt=\"phonebook\" />\r\n    </StyledLink>\r\n);\r\n\r\nexport default Logo;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HeaderStyled = styled.header`\r\n  .headerContainer {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    @media screen and (max-width: 767px) {\r\n      justify-content: space-between;\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Burger from \"../burger/Burger\";\r\nimport Logo from \"../logo/Logo\";\r\nimport { HeaderStyled } from \"./HeaderStyled\";\r\n\r\nconst Header = ({ toggleTheme }) => {\r\n  return (\r\n    <HeaderStyled>\r\n      <div className=\"container\">\r\n        <div className=\"headerContainer\">\r\n          <Logo />\r\n          <Burger toggleTheme={toggleTheme} />\r\n        </div>\r\n      </div>\r\n    </HeaderStyled>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { isLogin } from \"../redux/selectors/authSelectors\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...routeProps }) => {\r\n  const isAuthenticated = useSelector(isLogin);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        isAuthenticated ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { isLogin } from '../redux/selectors/authSelectors';\r\n\r\nconst PublicRoute = ({ component: Component, restricted, ...routeProps }) => {\r\n  const isAuthenticated = useSelector(isLogin);\r\n  return (\r\n    <Route\r\n      {...routeProps}\r\n      render={(props) =>\r\n        isAuthenticated && restricted ? <Redirect to=\"/contacts\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\nexport default PublicRoute","import React, { Suspense } from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport phonebookRoutes from \"../../routes/phonebookRoutes\";\r\nimport Loader from \"../loader/Loader\";\r\nimport PrivateRoute from \"../PrivateRoute\";\r\nimport PublicRoute from \"../PublicRoute\";\r\n\r\nconst Main = () => (\r\n  <main>\r\n    <Suspense fallback={<Loader />}>\r\n      <Switch>\r\n        {phonebookRoutes.map((route) => {\r\n          return route.isPrivate ? (\r\n            <PrivateRoute key={route.path} {...route} />\r\n          ) : (\r\n            <PublicRoute key={route.path} {...route} />\r\n          );\r\n        })}\r\n      </Switch>\r\n    </Suspense>\r\n  </main>\r\n);\r\n\r\nexport default Main;\r\n","import { useState, useEffect, } from \"react\";\r\n\r\nconst usePersitedTheme = (key, initialState) => {\r\n  const [state, setState] = useState(() => {\r\n    const storageValue = localStorage.getItem(key);\r\n   \r\n    if (storageValue) {\r\n      return JSON.parse(storageValue);\r\n    } else return initialState;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n  return [state, setState];\r\n};\r\n\r\nexport default usePersitedTheme;\r\n","const light = {\r\n  title: \"light\",\r\n\r\n  colors: {\r\n    main: \"#69a5d9\",\r\n    primary: \"#134780\",\r\n    secondary: \"#49BAA8\",\r\n    accent: \"#0C8671\",\r\n    mainBackground:\"#d5e2ed\",\r\n    text: \"#000000\",\r\n    background:\"#ffffff\",\r\n    burgerBackground: \"#3879c0\",\r\n  },\r\n};\r\n\r\nexport default light;","const dark = {\r\n  title: \"dark\",\r\n\r\n  colors: {\r\n    main: \"#032e42\",\r\n    primary: \"#2b6684\",\r\n    secondary: \"#0C8671\",\r\n    accent: \"#49BAA8\",\r\n    mainBackground: \"#141a23\",\r\n    text: \"#012e67\",\r\n    background:\"#ced6e3\",\r\n    burgerBackground: \"#69a5a1\",\r\n  },\r\n};\r\n\r\nexport default dark;","import { createGlobalStyle } from \"styled-components\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n\r\nbody {\r\n    background-color: ${({ theme }) => theme.colors.mainBackground};\r\n    color: ${(props) => props.theme.colors.text}\r\n}\r\n\r\nheader {\r\n  background-color:${({ theme }) => theme.colors.main};\r\n  color: #fff;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n}\r\n\r\n.container {\r\n  overflow: hidden;\r\n  width: 100%;\r\n  padding-left: 15px;\r\n  padding-right: 15px;\r\n\r\n\r\n  @media screen and (min-width: 320px) {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    width: 100%;\r\n  }\r\n  @media screen and (min-width: 768px) {\r\n    width: 750px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    width: 1080px;\r\n  }\r\n}\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { getCurrentUser } from \"../redux/operations/authOperations\";\nimport Header from \"./header/Header\";\nimport Main from \"./main/Main\";\nimport usePersitedTheme from \"../hooks/persistedTheme\";\nimport light from \"../themes/light\";\nimport dark from \"../themes/dark\";\nimport { ThemeProvider } from \"styled-components\";\nimport GlobalStyle from \"../themes/GlobalStyle\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getCurrentUser());\n    // eslint-disable-next-line\n  }, []);\n\n  const [theme, setTheme] = usePersitedTheme(\"theme\", light);\n\n  const toggleTheme = () => {\n    setTheme(theme.title === \"light\" ? dark : light);\n  };\n\n  return (\n    <>\n      <ThemeProvider theme={theme}>\n        <GlobalStyle />\n        <Header toggleTheme={toggleTheme} />\n        <Main />\n      </ThemeProvider>\n    </>\n  );\n};\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport  { store, persistor } from \"./redux/store\";\nimport App from \"./components/App\";\nimport \"./base.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import axios from \"axios\";\r\nimport {\r\n  getCurrentUserError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  loginError,\r\n  loginSuccess,\r\n  logoutError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  registerError,\r\n  registerRequest,\r\n  registerSuccess,\r\n} from \"../actions/authActions\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_BASE_URL;\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => (dispatch) => {\r\n  dispatch(registerRequest());\r\n\r\n  axios\r\n    .post(\"/users/signup\", credentials)\r\n    .then(({data}) => {\r\n      token.set(data.token);\r\n      dispatch(registerSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(registerError(error)));\r\n};\r\n\r\nconst logIn = (credentials) => (dispatch) => {\r\n  dispatch(registerRequest());\r\n\r\n  axios\r\n    .post(\"/users/login\", credentials)\r\n    .then(({data}) => {\r\n      token.set(data.token);\r\n      dispatch(loginSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(loginError(error)));\r\n};\r\n\r\nconst logOut = () => (dispatch) => {\r\n  dispatch(logoutRequest());\r\n\r\n  axios\r\n    .post(\"/users/logout\")\r\n    .then(() => {\r\n      token.unset();\r\n      dispatch(logoutSuccess());\r\n    })\r\n    .catch((error) => dispatch(logoutError(error)));\r\n};\r\n\r\nconst getCurrentUser = () => (dispatch, getState) => {\r\n \r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) return;\r\n\r\n  token.set(persistedToken);\r\n  dispatch(getCurrentUserRequest());\r\n\r\n  axios\r\n    .get(\"/users/current\")\r\n    .then(({data}) => {\r\n      dispatch(getCurrentUserSuccess(data));\r\n    })\r\n    .catch((error) => dispatch(getCurrentUserError(error)));\r\n};\r\n\r\nexport { register, logIn, logOut, getCurrentUser };\r\n","import React from \"react\";\r\nimport { css } from \"@emotion/core\";\r\nimport DotLoader from \"react-spinners/DotLoader\";\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Loader = () => {\r\n  return <DotLoader color=\"#0C8671\" loading=\"true\" css={override} size={60} />;\r\n};\r\n\r\nexport default Loader;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n"],"sourceRoot":""}