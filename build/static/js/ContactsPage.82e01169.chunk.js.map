{"version":3,"sources":["styles/FormStyled.js","components/notification/NotificationStyled.js","components/notification/Notification.js","redux/selectors/phonebookSelectors.js","components/contactForm/ContactForm.js","redux/operations/phonebookOperations.js","components/contactList/ContactListStyled.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/FilterStyled.js","components/filter/Filter.js","pages/contactsPage/ContactsPageStyled.js","pages/contactsPage/ContactsPage.js"],"names":["Form","styled","form","theme","colors","background","Input","input","main","Button","button","primary","NotifWrap","div","Notification","message","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","getError","error","getVisibleContacts","createSelector","item","name","toLowerCase","includes","initialState","number","alert","ContactForm","useSelector","dispatch","useDispatch","useState","setState","handleChange","e","target","value","prevState","onSubmit","preventDefault","contact","alertMessage","some","cont","addContactRequest","axios","post","then","data","addContactSuccess","catch","addContactError","type","placeholder","onChange","CSSTransition","in","classNames","onEntered","timeout","unmountOnExit","Wrapper","DelButton","ContactListItem","id","onDeleteContact","data-id","onClick","ContactList","handleDeleteContact","dataset","removeContactRequest","delete","removeContactSuccess","removeContactError","removeContact","setFilter","TransitionGroup","component","map","FilterWrapper","FilterInput","Filter","Container","ContactsPage","isLoadingContacts","useEffect","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","className","appear","length","Loader"],"mappings":"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","file":"static/js/ContactsPage.82e01169.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Form = styled.form`\r\n  margin: 30px 0; \r\n  padding: 20px;\r\n  border-radius: 5px;\r\n  background-color:${({theme}) => theme.colors.background};\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 10px;\r\n  margin: 5px 0 20px 0;\r\n  width: 100%;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  background-color: white;\r\n  outline-color:${({theme}) => theme.colors.main};\r\n\r\n  \r\n  &::placeholder {\r\n    font-size: 14px;\r\n    color: #d8d8d8;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 100%;\r\n  color: #fff;\r\n  font-size: 16px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  padding: 10px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  background-color: ${({theme}) => theme.colors.main};\r\n\r\n  â€ƒ &:hover {\r\n    transition: all 250ms linear;\r\n    background-color:${({theme}) => theme.colors.primary};\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NotifWrap = styled.div`\r\n  position: absolute;\r\n  top: 90px;\r\n  right: 20px;\r\n  background-color: #F1392D;\r\n  color: #fff;\r\n  font-size: 20px;\r\n  padding: 20px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n  border-radius:5px;\r\n`;\r\n","import React from \"react\";\r\nimport { NotifWrap } from \"./NotificationStyled\";\r\n\r\nconst Notification = ({ message }) => (\r\n  <NotifWrap>\r\n    <p>{message}</p>\r\n  </NotifWrap>\r\n);\r\n\r\nexport default Notification;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getContacts = (state) => state.contacts.items;\r\nconst getFilter = (state) => state.contacts.filter;\r\nconst getLoading = (state) => state.contacts.loading;\r\nconst getError = (state) => state.contacts.error;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (items, filter) =>\r\n    items.filter((item) =>\r\n      item.name.toLowerCase().includes(filter.toLowerCase())\r\n    )\r\n);\r\n\r\nexport { getContacts, getFilter, getLoading, getError, getVisibleContacts };\r\n","import React, { useState} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {addContact} from \"../../redux/operations/phonebookOperations\";\r\nimport Notification from \"../notification/Notification\";\r\nimport { Form, Input, Button } from \"../../styles/FormStyled\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { getContacts } from \"../../redux/selectors/phonebookSelectors\";\r\n\r\nconst initialState = {\r\n  name: \"\",\r\n  number: \"\",\r\n  alert: false,\r\n};\r\n\r\nconst ContactForm = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const [state, setState] = useState({ ...initialState });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = state;\r\n\r\n    if (!name || !number) {\r\n      return setState((prevState) => ({\r\n        ...prevState,\r\n        alert: true,\r\n        alertMessage: \"Please enter some contact information.\",\r\n      }));\r\n    }\r\n\r\n    contacts.some((cont) => cont.name.toLowerCase() === name.toLowerCase())\r\n      ? setState((prevState) => ({\r\n          ...prevState,\r\n          alert: true,\r\n          alertMessage: `${name} is already in contacts!`,\r\n        }))\r\n      : dispatch(addContact({ name, number }));\r\n\r\n    setState((prevState) => ({ ...prevState, name: \"\", number: \"\" }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit}>\r\n        <label>\r\n          Name\r\n          <Input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={state.name}\r\n            placeholder=\"Enter your name\"\r\n            onChange={handleChange}\r\n          ></Input>\r\n        </label>\r\n        <label>\r\n          Number\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={state.number}\r\n            placeholder=\"123-45-678\"\r\n            onChange={handleChange}\r\n          ></Input>\r\n        </label>\r\n        <Button type=\"submit\">Add contact</Button>\r\n      </Form>\r\n      <CSSTransition\r\n        in={state.alert}\r\n        classNames=\"Notification\"\r\n        onEntered={() =>\r\n          setState((prevState) => ({ ...prevState, alert: false }))\r\n        }\r\n        timeout={3000}\r\n        unmountOnExit\r\n      >\r\n        <Notification message={state.alertMessage} />\r\n      </CSSTransition>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  removeContactError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n} from \"../actions/phonebookActions\";\r\n\r\nconst addContact = (contact) => (dispatch) => {\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error)));\r\n};\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst removeContact = (id) => (dispatch) => {\r\n  dispatch(removeContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(removeContactSuccess(id)))\r\n    .catch((error) => dispatch(removeContactError(error)));\r\n};\r\n\r\nexport { addContact, fetchContacts, removeContact };\r\n","import styled from \"styled-components\";\r\nimport { Button } from \"../../styles/FormStyled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  li {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 10px 15px;\r\n    background-color: ${({theme})=> theme.colors.background};\r\n    box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n    border-radius: 3px;\r\n\r\n    &:not(:last-child) {\r\n      margin-bottom: 10px;\r\n    }\r\n  }\r\n\r\n  .ContactList-item-enter {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n  }\r\n\r\n  .ContactList-item-enter-active {\r\n    opacity: 1;\r\n    transform:translateX(0);\r\n    transition: all 250ms linear;\r\n  }\r\n\r\n  .ContactList-item-exit {\r\n    opacity: 1;\r\n    transform: translateX(0);\r\n  }\r\n\r\n  .ContactList-item-exit-active {\r\n    opacity: 0;\r\n    transform: translateX(-100%);\r\n    transition: all 250ms linear;\r\n  }\r\n`;\r\n\r\nexport const DelButton = styled(Button)`\r\n  width:35px;\r\n  height:35px;\r\n  font-size: 22px;\r\n  background-color:#F1392D;\r\n  line-height: 15px;\r\n\r\n  &:hover{\r\n    background-color:#d71b0e\r\n  }\r\n`;\r\n\r\n","import React from \"react\";\r\nimport {DelButton} from \"../ContactListStyled\"\r\n\r\nconst ContactListItem = ({ contact:{id, name, number}, onDeleteContact }) => (\r\n  <li>\r\n    <p>\r\n      {name}: {number}\r\n    </p>\r\n    <DelButton type=\"button\" data-id={id} onClick={onDeleteContact}>&times;</DelButton>\r\n  </li>\r\n);\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\nimport { setFilter } from \"../../redux/actions/phonebookActions\";\r\nimport { removeContact } from \"../../redux/operations/phonebookOperations\";\r\nimport { getVisibleContacts } from \"../../redux/selectors/phonebookSelectors\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport { Wrapper } from \"./ContactListStyled\";\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleDeleteContact = (e) => {\r\n    const { id } = e.target.dataset;\r\n    dispatch(removeContact(id));\r\n    dispatch(setFilter(\"\"));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <TransitionGroup component=\"ul\">\r\n        {contacts.map((contact) => (\r\n          <CSSTransition\r\n            key={contact.id}\r\n            timeout={250}\r\n            classNames=\"ContactList-item\"\r\n          >\r\n            <ContactListItem\r\n              contact={contact}\r\n              onDeleteContact={handleDeleteContact}\r\n            />\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import styled from \"styled-components\";\r\nimport { Input } from \"../../styles/FormStyled\";\r\n\r\nexport const FilterWrapper = styled.div`\r\n  margin: 0 0 30px ;\r\n  padding: 5px 20px 10px;\r\n  background-color: ${({theme})=> theme.colors.background};\r\n  border-radius: 3px;\r\n  box-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\r\n`;\r\n\r\nexport const FilterInput = styled(Input)`\r\n  margin: 5px 0 0;\r\n`;\r\n\r\n\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setFilter } from \"../../redux/actions/phonebookActions\";\r\nimport { getFilter } from \"../../redux/selectors/phonebookSelectors\";\r\nimport { FilterWrapper, FilterInput } from \"./FilterStyled\";\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  \r\n  const handleChange = (e) => {\r\n    const { value } = e.target;\r\n    dispatch(setFilter(value));\r\n  };\r\n\r\n  return (\r\n    <FilterWrapper>\r\n      <label>\r\n        Find contacts by name\r\n        <FilterInput\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          placeholder=\"Search...\"\r\n        ></FilterInput>\r\n      </label>\r\n    </FilterWrapper>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Container = styled.div`\r\n\r\n  max-width: 500px;\r\n  margin: 0 auto;\r\n  padding: 50px 0;\r\n\r\n  h1 {\r\n    color: #134780;\r\n  }\r\n\r\n  .phonebook-title-appear {\r\n    transform: translateX(-100%);\r\n  }\r\n  .phonebook-title-appear-active {\r\n    transform: translateX(0);\r\n    transition: transform 500ms linear;\r\n  }\r\n\r\n\r\n  .filter-enter {\r\n    opacity: 0;\r\n    transform: scale(0.1);\r\n  }\r\n\r\n  .filter-enter-active {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n    transition: all 250ms linear;\r\n  }\r\n\r\n  .filter-exit {\r\n    opacity: 1;\r\n    transform: scale(0.1);\r\n  }\r\n\r\n  .filter-exit-active {\r\n    opacity: 0;\r\n    transform: scale(0);\r\n    transition: all 250ms linear;\r\n  }\r\n\r\n  .Notification-enter {\r\n    transform: translateX(100%);\r\n  }\r\n\r\n  .Notification-enter-active {\r\n    transform: translateX(0);\r\n    transition: transform 250ms linear;\r\n  }\r\n\r\n  .Notification-exit {\r\n    transform: translateX(0);\r\n  }\r\n\r\n  .Notification-exit-active {\r\n    transform: translateX(300%);\r\n    transition: transform 250ms linear;\r\n  }\r\n`;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n//components\r\nimport ContactForm from \"../../components/contactForm/ContactForm\";\r\nimport ContactList from \"../../components/contactList/ContactList\";\r\nimport Filter from \"../../components/filter/Filter\";\r\nimport Loader from \"../../components/loader/Loader\";\r\nimport Notification from \"../../components/notification/Notification\";\r\n//operations\r\nimport { fetchContacts } from \"../../redux/operations/phonebookOperations\";\r\n//selectors\r\nimport {\r\n  getContacts,\r\n  getError,\r\n  getLoading,\r\n} from \"../../redux/selectors/phonebookSelectors\";\r\n//styles\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport { Container } from \"./ContactsPageStyled\";\r\n\r\n\r\nconst ContactsPage = () => {\r\n  const contacts = useSelector(getContacts);\r\n  const isLoadingContacts = useSelector(getLoading);\r\n  const error = useSelector(getError);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n    <Container>\r\n      <CSSTransition\r\n        in={true}\r\n        appear={true}\r\n        classNames=\"phonebook-title\"\r\n        timeout={500}\r\n        unmountOnExit\r\n      >\r\n        <h1>Phonebook</h1>\r\n      </CSSTransition>\r\n\r\n      <ContactForm />\r\n\r\n      <CSSTransition\r\n        in={contacts.length > 1}\r\n        classNames=\"filter\"\r\n        timeout={250}\r\n        unmountOnExit\r\n      >\r\n        <Filter />\r\n      </CSSTransition>\r\n\r\n      {isLoadingContacts && <Loader />}\r\n      <ContactList />\r\n      {!contacts.length && !isLoadingContacts && (\r\n        <p>There are no contacts in current list.</p>\r\n      )}\r\n      {error && <Notification message={error.message} />}\r\n    </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactsPage;\r\n"],"sourceRoot":""}